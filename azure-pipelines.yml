resources:
  repositories:
    - repository: pipeline-templates
      type: github
      name: lsportsltd/devops-pipeline-templates
      endpoint: lsportsltd

trigger: none

stages:
  - template: general/generic-package-CICD.yaml@pipeline-templates
    parameters:
      packageManager: 'maven'
      language: 'java'
      languageVersion: '17'
      artifactImageLocation: '/app/target'
      locationToBuild: 'trade360-java-sdk/sdk/trade360-java-sdk'
      serviceName: sdk
      
  - template: general/generic-package-CICD.yaml@pipeline-templates
    parameters:
      packageManager: 'maven'
      language: 'java'
      languageVersion: '17'
      artifactImageLocation: '/app/samples/trade360-samples/target'
      locationToBuild: 'trade360-java-sdk/samples/trade360-samples'
      dockerfilePath: 'trade360-java-sdk'
      serviceName: samples

  - stage: PublishToMavenCentral
    displayName: 'Publish to Maven Central'
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/publishingSDK'), eq(variables['Build.Reason'], 'PullRequest')))
    jobs:
      - job: PublishArtifacts
        pool: k8s-agents-ci
        steps:
          - task: DownloadSecureFile@1
            name: mavenSettings
            inputs:
              secureFile: 'settings.xml'

          - task: CopyFiles@2
            inputs:
              sourceFiles: '$(mavenSettings.secureFilePath)'
              targetFolder: '$(Build.SourcesDirectory)/trade360-java-sdk'

          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              command: 'build'
              dockerfile: '$(Build.SourcesDirectory)/sdk/trade360-java-sdk/Dockerfile.publish'
              buildContext: '$(Build.SourcesDirectory)/trade360-java-sdk'
              tags: 'maven-publisher:latest'

          - task: Docker@2
            displayName: 'Run Maven Deploy'
            inputs:
              command: 'run'
              arguments: '--rm --env MAVEN_USERNAME="$(devopsr.maven.username)" --env MAVEN_PASSWORD="$(devopsr.maven.password)" --env MAVEN_TOKEN="$(devopsr.maven.token)" --env MAVEN_AUTH="$(devopsr.maven.auth)" --env MAVEN_NAMESPACE="$(devopsr.maven.namespace)"'

      
      
