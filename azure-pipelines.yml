resources:
  repositories:
    - repository: pipeline-templates
      type: github
      name: lsportsltd/devops-pipeline-templates
      endpoint: lsportsltd

trigger: none

stages:
  - template: general/generic-package-CICD.yaml@pipeline-templates
    parameters:
      packageManager: 'maven'
      language: 'java'
      languageVersion: '17'
      artifactImageLocation: '/app/target'
      locationToBuild: 'trade360-java-sdk/sdk/trade360-java-sdk'
      serviceName: sdk
      
  - template: general/generic-package-CICD.yaml@pipeline-templates
    parameters:
      packageManager: 'maven'
      language: 'java'
      languageVersion: '17'
      artifactImageLocation: '/app/samples/trade360-samples/target'
      locationToBuild: 'trade360-java-sdk/samples/trade360-samples'
      dockerfilePath: 'trade360-java-sdk'
      serviceName: samples

  - stage: PublishToMavenCentral
    displayName: 'Publish to Maven Central'
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/publishingSDK'), eq(variables['Build.Reason'], 'PullRequest')))
    jobs:
      - job: PublishArtifacts
        pool: k8s-agents-ci
        steps:
          - task: DownloadSecureFile@1
            name: mavenSettings
            inputs:
              secureFile: 'settings.xml'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Create a temporary directory for the build
                mkdir -p $(Build.SourcesDirectory)/maven-publish
                cp -r $(Build.SourcesDirectory)/trade360-java-sdk/* $(Build.SourcesDirectory)/maven-publish/
                cp $(mavenSettings.secureFilePath) $(Build.SourcesDirectory)/maven-publish/settings.xml

          - task: Docker@2
            inputs:
              command: 'build'
              dockerfile: '$(Build.SourcesDirectory)/trade360-java-sdk/Dockerfile.publish'
              buildContext: '$(Build.SourcesDirectory)/maven-publish'
              arguments: '--build-arg MAVEN_USERNAME="$(devopsr.maven.username)" --build-arg MAVEN_PASSWORD="$(devopsr.maven.password)"'

      
      
