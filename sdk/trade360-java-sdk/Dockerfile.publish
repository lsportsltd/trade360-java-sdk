# Use a multi-stage build
FROM maven:3.9.6-eclipse-temurin-17 AS builder

# Set working directory
WORKDIR /build

# Install GPG
RUN apt-get update && \
    apt-get install -y gnupg2

# Declare build arguments
ARG MAVEN_USERNAME
ARG MAVEN_PASSWORD
ARG GPG_KEY
ARG GPG_PASSPHRASE

# Set environment variables
ENV MAVEN_USERNAME=${MAVEN_USERNAME} \
    MAVEN_PASSWORD=${MAVEN_PASSWORD} \
    GPG_PASSPHRASE=${GPG_PASSPHRASE}

# Debug: Check if GPG_KEY is set (will only show length for security)
RUN echo "GPG key length: $(echo "$GPG_KEY" | wc -c)"

# Import GPG key with error handling
RUN if [ -z "$GPG_KEY" ]; then \
        echo "Error: GPG_KEY is empty" && exit 1; \
    fi && \
    echo "${GPG_KEY}" | base64 -d > /tmp/gpg.key && \
    if [ ! -s /tmp/gpg.key ]; then \
        echo "Error: Decoded GPG key is empty" && exit 1; \
    fi && \
    gpg --batch --import /tmp/gpg.key && \
    rm /tmp/gpg.key

# Copy settings.xml first
COPY settings.xml /root/.m2/settings.xml

# Copy the project files
COPY . .

# Run Maven deploy with debug flags and print environment for debugging
RUN env && \
    mvn clean deploy -P release \
    -Dmaven.javadoc.skip=true \
    -Dmaven.test.skip=true \
    -X -e \
    -f sdk/trade360-java-sdk/pom.xml \
    --batch-mode \
    --no-transfer-progress \
    -Dserver.username=${MAVEN_USERNAME} \
    -Dserver.password=${MAVEN_PASSWORD} \
    -Dgpg.passphrase=${GPG_PASSPHRASE}